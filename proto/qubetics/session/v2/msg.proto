syntax = "proto3";
package qubetics.session.v2;

import "gogoproto/gogo.proto";
import "qubetics/session/v2/proof.proto";

option go_package = "github.com/qubetics/qubetics-blockchain/v2/x/session/types/v2";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

message MsgEndRequest {
  string from = 1;
  uint64 id = 2 [(gogoproto.customname) = "ID"];
  uint64 rating = 3;
}

message MsgStartRequest {
  string from = 1;
  uint64 id = 2 [(gogoproto.customname) = "ID"];
  string address = 3;
}

message MsgUpdateDetailsRequest {
  string from = 1;
  Proof proof = 2 [(gogoproto.nullable) = false];
  bytes signature = 3;
}

message MsgEndResponse {}

message MsgStartResponse {}

message MsgUpdateDetailsResponse {}

service MsgService {
  rpc MsgStart(MsgStartRequest) returns (MsgStartResponse);
  rpc MsgUpdateDetails(MsgUpdateDetailsRequest) returns (MsgUpdateDetailsResponse);
  rpc MsgEnd(MsgEndRequest) returns (MsgEndResponse);
}
